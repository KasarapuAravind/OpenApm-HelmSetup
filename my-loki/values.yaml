# https://github.com/grafana/helm-charts/blob/main/charts/loki-distributed/values.yaml
#
# Good example article: https://www.mdotyeducation.com/configure-loki-storage/


# These vars are only utilized by local chart templates
monitoring:
  dashboards:
    enabled: true
    labels:
      grafana_dashboard: "1"
    annotations:
      grafana_folder: "APM Tools"

# Global vars for all environments

loki-distributed:

  serviceMonitor:
    enabled: true

  loki:
    # NOTE: This overrides the default, which is the AppVersion in the source chart.
    # We are doing this get force using a new image in order to get ARM versions of the
    # docker images utilized.  This needs to be removed with the next chart upgrade
    image:
      tag: 2.9.3

    annotations:
      owner: aravind.smsk@gmail.com
      product: loki
    serviceAnnotations:
      owner: aravind.smsk@gmail.com
      product: loki
    podAnnotations:
      owner: aravind.smsk@gmail.com
      product: loki



  compactor:
    enabled: true
    resources:
      limits:
        cpu: 50m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 100Mi

  distributor:
    # Replicas doesn't impact the spec output if autoScaling is enabled,
    # but it is required to be >1 in order for a PDB to be created
    replicas: 2
    maxUnavailable: 1
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 3
    resources:
      limits:
        cpu: 50m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 100Mi

  ingester:
    # Replicas doesn't impact the spec output if autoScaling is enabled,
    # but it is required to be >1 in order for a PDB to be created
    replicas: 2
    maxUnavailable: 1
    autoscaling:
      enabled: true
      minReplicas: 2
      maxReplicas: 3
    resources:
      limits:
        cpu: 50m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 100Mi

  querier:
    # Replicas doesn't impact the spec output if autoScaling is enabled,
    # but it is required to be >1 in order for a PDB to be created
    replicas: 2
    maxUnavailable: 1
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 3
    resources:
      limits:
        cpu: 50m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 100Mi
    
    # structuredConfig:
    #   server:
    #     http_tls_config:
    #       cert_file: /etc/ssl-certs/tls.crt
    #       key_file: /etc/ssl-certs/tls.key
    #     grpc_tls_config:
    #       cert_file: /etc/ssl-certs/tls.crt
    #       key_file: /etc/ssl-certs/tls.key

  queryFrontend:
    # Replicas doesn't impact the spec output if autoScaling is enabled,
    # but it is required to be >1 in order for a PDB to be created
    replicas: 2
    maxUnavailable: 1
    autoscaling:
      enabled: true
      minReplicas: 1
      maxReplicas: 3
    resources:
      limits:
        cpu: 50m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 100Mi



  # This is an example of a ruler definition that looks for high percentages of error messages
  # In our test app, can use the following: sum(rate({service_name="SampleTestApp"} |= `Critical` [$__interval])) / sum(rate({service_name="SampleTestApp"} [$__interval]))
  ruler:
    enabled: true
    # Replicas doesn't impact the spec output if autoScaling is enabled,
    # but it is required to be >1 in order for a PDB to be created
    replicas: 2
    maxUnavailable: 1

    resources:
      limits:
        cpu: 50m
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 100Mi

    directories:
      fake:
        rules1.txt: |
          groups:
            - name: should_fire
              rules:
                - alert: HighPercentageError
                  expr: |
                    sum(rate({app="loki"} |= "error" [5m])) by (job)
                      /
                    sum(rate({app="loki"}[5m])) by (job)
                      > 0.05
                  for: 10m
                  labels:
                    severity: warning
                  annotations:
                    summary: High error rate