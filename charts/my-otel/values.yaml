# Reference: https://github.com/open-telemetry/opentelemetry-helm-charts/blob/main/charts/opentelemetry-collector/values.yaml
# To debug changes: helm template . --debug
commonannotations: &commonAnnotations
  nice.com/owner: aravind.smsk@gmail.com
  nice.com/product: openapm

config:
  logLevel: info

  # These are for comparison only for the moment
  victoriametrics:
    enabled: false
  amp:
    enabled: false

annotations: *commonAnnotations

prometheusRule:
  enabled: true
  # groups: []
  # Create default rules for monitoring the collector
  defaultRules:
    enabled: true

serviceMonitor:
  # The service monitor by default scrapes the metrics port.
  # The metrics port needs to be enabled as well.
  enabled: true
  metricsEndpoints:
    - port: metrics

### Values for the OTEL chart
opentelemetry-collector:
  annotations: *commonAnnotations

  service:
    annotations:
      <<: *commonAnnotations

  podAnnotations: *commonAnnotations

  mode: deployment

  config:
    extensions:
      zpages:
        endpoint: ${env:MY_POD_IP}:55679
      exporters:
      otlp/tempo:
        endpoint: "http://tempo-app-tmor-distributor.tempo.svc:4317"
        tls:
          insecure: true

      prometheusremotewrite/mimir:
        endpoint: "http://mimir-app-tmor-distributor.mimir.svc:8080/api/v1/push"
        headers:
          X-Scope-OrgID: "anonymous"
        remote_write_queue:
          num_consumers: 15
          queue_size: 400

      loki:
        endpoint: "http://loki-app-tmor-distributor.loki.svc:3100/loki/api/v1/push"

    processors:
      # Increasing batch timeout to reduce otel cpu usage and increase processing throughput
      attributes:
        actions:
        - action: insert
          key: loki.attribute.labels
          value: openapm_product_name, service_name, region

    receivers:
      otlp:
        protocols:
          grpc:
            max_recv_msg_size_mib: 10

      loki:
        protocols:
          http:
            endpoint: ${env:MY_POD_IP}:3500

          grpc:
            endpoint: ${env:MY_POD_IP}:3600

      zipkin:
        endpoint: ${env:MY_POD_IP}:9411

      # Disable already defined receivers that we don't want
      jaeger: null
      prometheus: null

    service:
      # Add ability to change logging level
#      telemetry:
#        logs:
#          level: {{ tpl .Values.config.logLevel . }}

      pipelines:
        traces:
          receivers: [otlp, zipkin]
          exporters: [otlp/tempo]
        metrics:
          receivers: [otlp]
          exporters: [prometheusremotewrite/mimir]
        logs:
          receivers: [otlp, loki]
          exporters: [loki]
          processors: [memory_limiter, batch, attributes]

  # Note if the pod memory changes please also update alerting.memory_limit_mbytes
  # The value format between the two is different
  resources:
    limits:
      cpu: 50m
      memory: 100Mi
    requests:
      cpu: 50m
      memory: 100Mi

  ports:
    otlp:
      enabled: true
    otlp-http:
      enabled: true
    jaeger-compact:
      enabled: false
    jaeger-thrift:
      enabled: false
    zipkin:
      enabled: true
      containerPort: 9411
      servicePort: 9411
      hostPort: 9411
      protocol: TCP
    metrics:
      enabled: true
    zpages:
      enabled: false
      containerPort: 55679
      servicePort: 55679
      hostPort: 55679
      protocol: TCP
    health:
      enabled: true
      containerPort: 13133
      servicePort: 13133
      hostPort: 13133
      protocol: TCP
    loki:
      enabled: true
      containerPort: 3500
      servicePort: 3500
      hostPort: 3500
      protocol: TCP
    loki-grpc:
      enabled: true
      containerPort: 3600
      servicePort: 3600
      hostPort: 3600
      protocol: TCP

  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 4
    targetCPUUtilizationPercentage: 80

  podDisruptionBudget:
    enabled: true
    maxUnavailable: 1

  serviceMonitor:
    enabled: true
